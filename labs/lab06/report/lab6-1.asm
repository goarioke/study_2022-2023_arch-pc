;------------------------------------------------------------------
; Программа вывода сообщения на экран и ввода строки с клавиатуры
;------------------------------------------------------------------

;------------------- Объявление переменных ----------------
  SECTION .data                ; Секция инициированных данных
  msg: DB 'Введите строку:',10 ; сообщение плюс
                               ; символ перевода строки
  msgLen: EQU $-msg            ; Длина переменной 'msg'

  SECTION .bss       ; Секция не инициированных данных
  buf1: RESB 80      ; Буфер размером 80 байт

;------------------- Текст программы -----------------

  SECTION .text      ; Код программы
  GLOBAL _start      ; Начало программы
  _start:            ; Точка входа в программу

;------------ Cистемный вызов `write`
; После вызова инструкции 'int 80h' на экран будет
; выведено сообщение из переменной 'msg' длиной 'msgLen'

    mov eax,4        ; Системный вызов для записи (sys_write)
    mov ebx,1        ; Описатель файла 1 - стандартный вывод
    mov ecx,msg      ; Адрес строки 'msg' в 'ecx'
    mov edx,msgLen   ; Размер строки 'msg' в 'edx'
    int 80h          ; Вызов ядра

;------------ системный вызов `read` ----------------------
; После вызова инструкции 'int 80h' программа будет ожидать ввода
; строки, которая будет записана в переменную 'buf1' размером 80 байт

   mov eax, 3        ; Системный вызов для чтения (sys_read)
   mov ebx, 0        ; Дескриптор файла 0 - стандартный ввод
   mov ecx, buf1     ; Адрес буфера под вводимую строку
   mov edx, 80       ; Длина вводимой строки
   int 80h           ; Вызов ядра

;------------ Системный вызов `exit` ----------------------
; После вызова инструкции 'int 80h' программа завершит работу
   mov eax,1        ; Системный вызов для выхода (sys_exit)
   mov ebx,0        ; Выход с кодом возврата 0 (без ошибок)
   int 80h          ; Вызов ядра
